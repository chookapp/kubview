{
    "apiVersion": "v1",
    "items": [
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"StatefulSet\",\"metadata\":{\"annotations\":{},\"name\":\"kafka\",\"namespace\":\"kafka\"},\"spec\":{\"podManagementPolicy\":\"Parallel\",\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"kafka\"}},\"serviceName\":\"broker\",\"template\":{\"metadata\":{\"annotations\":null,\"labels\":{\"app\":\"kafka\"}},\"spec\":{\"containers\":[{\"command\":[\"./bin/kafka-server-start.sh\",\"/etc/kafka/server.properties\"],\"env\":[{\"name\":\"CLASSPATH\",\"value\":\"/opt/kafka/libs/extensions/*\"},{\"name\":\"KAFKA_LOG4J_OPTS\",\"value\":\"-Dlog4j.configuration=file:/etc/kafka/log4j.properties\"},{\"name\":\"JMX_PORT\",\"value\":\"5555\"}],\"image\":\"solsson/kafka:2.3.0@sha256:b59603a8c0645f792fb54e9571500e975206352a021d6a116b110945ca6c3a1d\",\"lifecycle\":{\"preStop\":{\"exec\":{\"command\":[\"sh\",\"-ce\",\"kill -s TERM 1; while $(kill -0 1 2\\u003e/dev/null); do sleep 1; done\"]}}},\"name\":\"broker\",\"ports\":[{\"containerPort\":9092,\"name\":\"inside\"},{\"containerPort\":9094,\"name\":\"outside\"},{\"containerPort\":5555,\"name\":\"jmx\"}],\"readinessProbe\":{\"tcpSocket\":{\"port\":9092},\"timeoutSeconds\":10},\"resources\":{\"limits\":{\"memory\":\"600Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/etc/kafka\",\"name\":\"config\"},{\"mountPath\":\"/var/lib/kafka/data\",\"name\":\"data\"},{\"mountPath\":\"/opt/kafka/libs/extensions\",\"name\":\"extensions\"}]}],\"initContainers\":[{\"command\":[\"/bin/bash\",\"/etc/kafka-configmap/init.sh\"],\"env\":[{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"solsson/kafka-initutils@sha256:f6d9850c6c3ad5ecc35e717308fddb47daffbde18eb93e98e031128fe8b899ef\",\"name\":\"init-config\",\"volumeMounts\":[{\"mountPath\":\"/etc/kafka-configmap\",\"name\":\"configmap\"},{\"mountPath\":\"/etc/kafka\",\"name\":\"config\"},{\"mountPath\":\"/opt/kafka/libs/extensions\",\"name\":\"extensions\"}]}],\"terminationGracePeriodSeconds\":30,\"volumes\":[{\"configMap\":{\"name\":\"broker-config\"},\"name\":\"configmap\"},{\"emptyDir\":{},\"name\":\"config\"},{\"emptyDir\":{},\"name\":\"extensions\"}]}},\"updateStrategy\":{\"type\":\"RollingUpdate\"},\"volumeClaimTemplates\":[{\"metadata\":{\"name\":\"data\"},\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"10Gi\"}},\"storageClassName\":\"kafka-broker\"}}]}}\n"
                },
                "creationTimestamp": "2019-12-22T14:09:49Z",
                "generation": 1,
                "name": "kafka",
                "namespace": "kafka",
                "resourceVersion": "21504",
                "selfLink": "/apis/apps/v1/namespaces/kafka/statefulsets/kafka",
                "uid": "b7065390-24c4-11ea-8dc9-02cea54b2b40"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 2,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "kafka"
                    }
                },
                "serviceName": "broker",
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kafka"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "./bin/kafka-server-start.sh",
                                    "/etc/kafka/server.properties"
                                ],
                                "env": [
                                    {
                                        "name": "CLASSPATH",
                                        "value": "/opt/kafka/libs/extensions/*"
                                    },
                                    {
                                        "name": "KAFKA_LOG4J_OPTS",
                                        "value": "-Dlog4j.configuration=file:/etc/kafka/log4j.properties"
                                    },
                                    {
                                        "name": "JMX_PORT",
                                        "value": "5555"
                                    }
                                ],
                                "image": "solsson/kafka:2.3.0@sha256:b59603a8c0645f792fb54e9571500e975206352a021d6a116b110945ca6c3a1d",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "sh",
                                                "-ce",
                                                "kill -s TERM 1; while $(kill -0 1 2\u003e/dev/null); do sleep 1; done"
                                            ]
                                        }
                                    }
                                },
                                "name": "broker",
                                "ports": [
                                    {
                                        "containerPort": 9092,
                                        "name": "inside",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9094,
                                        "name": "outside",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5555,
                                        "name": "jmx",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": 9092
                                    },
                                    "timeoutSeconds": 10
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "600Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "100Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/kafka",
                                        "name": "config"
                                    },
                                    {
                                        "mountPath": "/var/lib/kafka/data",
                                        "name": "data"
                                    },
                                    {
                                        "mountPath": "/opt/kafka/libs/extensions",
                                        "name": "extensions"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "/bin/bash",
                                    "/etc/kafka-configmap/init.sh"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "solsson/kafka-initutils@sha256:f6d9850c6c3ad5ecc35e717308fddb47daffbde18eb93e98e031128fe8b899ef",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init-config",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/kafka-configmap",
                                        "name": "configmap"
                                    },
                                    {
                                        "mountPath": "/etc/kafka",
                                        "name": "config"
                                    },
                                    {
                                        "mountPath": "/opt/kafka/libs/extensions",
                                        "name": "extensions"
                                    }
                                ]
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "broker-config"
                                },
                                "name": "configmap"
                            },
                            {
                                "emptyDir": {},
                                "name": "config"
                            },
                            {
                                "emptyDir": {},
                                "name": "extensions"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate"
                },
                "volumeClaimTemplates": [
                    {
                        "metadata": {
                            "creationTimestamp": null,
                            "name": "data"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "10Gi"
                                }
                            },
                            "storageClassName": "kafka-broker",
                            "volumeMode": "Filesystem"
                        },
                        "status": {
                            "phase": "Pending"
                        }
                    }
                ]
            },
            "status": {
                "collisionCount": 0,
                "currentReplicas": 2,
                "currentRevision": "kafka-6cd4c4d4bb",
                "observedGeneration": 1,
                "readyReplicas": 2,
                "replicas": 2,
                "updateRevision": "kafka-6cd4c4d4bb",
                "updatedReplicas": 2
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"StatefulSet\",\"metadata\":{\"annotations\":{},\"name\":\"pzoo\",\"namespace\":\"kafka\"},\"spec\":{\"podManagementPolicy\":\"Parallel\",\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"zookeeper\",\"storage\":\"persistent\"}},\"serviceName\":\"pzoo\",\"template\":{\"metadata\":{\"annotations\":null,\"labels\":{\"app\":\"zookeeper\",\"storage\":\"persistent\"}},\"spec\":{\"containers\":[{\"command\":[\"./bin/zookeeper-server-start.sh\",\"/etc/kafka/zookeeper.properties\"],\"env\":[{\"name\":\"KAFKA_LOG4J_OPTS\",\"value\":\"-Dlog4j.configuration=file:/etc/kafka/log4j.properties\"}],\"image\":\"solsson/kafka:2.3.0@sha256:b59603a8c0645f792fb54e9571500e975206352a021d6a116b110945ca6c3a1d\",\"lifecycle\":{\"preStop\":{\"exec\":{\"command\":[\"sh\",\"-ce\",\"kill -s TERM 1; while $(kill -0 1 2\\u003e/dev/null); do sleep 1; done\"]}}},\"name\":\"zookeeper\",\"ports\":[{\"containerPort\":2181,\"name\":\"client\"},{\"containerPort\":2888,\"name\":\"peer\"},{\"containerPort\":3888,\"name\":\"leader-election\"}],\"readinessProbe\":{\"exec\":{\"command\":[\"/bin/sh\",\"-c\",\"[ \\\"imok\\\" = \\\"$(echo ruok | nc -w 1 -q 1 127.0.0.1 2181)\\\" ]\"]}},\"resources\":{\"limits\":{\"memory\":\"120Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/etc/kafka\",\"name\":\"config\"},{\"mountPath\":\"/var/lib/zookeeper\",\"name\":\"data\"}]}],\"initContainers\":[{\"command\":[\"/bin/bash\",\"/etc/kafka-configmap/init.sh\"],\"image\":\"solsson/kafka-initutils@sha256:f6d9850c6c3ad5ecc35e717308fddb47daffbde18eb93e98e031128fe8b899ef\",\"name\":\"init-config\",\"volumeMounts\":[{\"mountPath\":\"/etc/kafka-configmap\",\"name\":\"configmap\"},{\"mountPath\":\"/etc/kafka\",\"name\":\"config\"},{\"mountPath\":\"/var/lib/zookeeper\",\"name\":\"data\"}]}],\"terminationGracePeriodSeconds\":10,\"volumes\":[{\"configMap\":{\"name\":\"zookeeper-config\"},\"name\":\"configmap\"},{\"emptyDir\":{},\"name\":\"config\"}]}},\"updateStrategy\":{\"type\":\"RollingUpdate\"},\"volumeClaimTemplates\":[{\"metadata\":{\"name\":\"data\"},\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"1Gi\"}},\"storageClassName\":\"kafka-zookeeper\"}}]}}\n"
                },
                "creationTimestamp": "2019-12-22T13:46:36Z",
                "generation": 1,
                "name": "pzoo",
                "namespace": "kafka",
                "resourceVersion": "14052",
                "selfLink": "/apis/apps/v1/namespaces/kafka/statefulsets/pzoo",
                "uid": "78e0e4dc-24c1-11ea-ac88-0ad449621476"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 2,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "zookeeper",
                        "storage": "persistent"
                    }
                },
                "serviceName": "pzoo",
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "zookeeper",
                            "storage": "persistent"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "./bin/zookeeper-server-start.sh",
                                    "/etc/kafka/zookeeper.properties"
                                ],
                                "env": [
                                    {
                                        "name": "KAFKA_LOG4J_OPTS",
                                        "value": "-Dlog4j.configuration=file:/etc/kafka/log4j.properties"
                                    }
                                ],
                                "image": "solsson/kafka:2.3.0@sha256:b59603a8c0645f792fb54e9571500e975206352a021d6a116b110945ca6c3a1d",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "sh",
                                                "-ce",
                                                "kill -s TERM 1; while $(kill -0 1 2\u003e/dev/null); do sleep 1; done"
                                            ]
                                        }
                                    }
                                },
                                "name": "zookeeper",
                                "ports": [
                                    {
                                        "containerPort": 2181,
                                        "name": "client",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 2888,
                                        "name": "peer",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 3888,
                                        "name": "leader-election",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/sh",
                                            "-c",
                                            "[ \"imok\" = \"$(echo ruok | nc -w 1 -q 1 127.0.0.1 2181)\" ]"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "120Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "100Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/kafka",
                                        "name": "config"
                                    },
                                    {
                                        "mountPath": "/var/lib/zookeeper",
                                        "name": "data"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "/bin/bash",
                                    "/etc/kafka-configmap/init.sh"
                                ],
                                "image": "solsson/kafka-initutils@sha256:f6d9850c6c3ad5ecc35e717308fddb47daffbde18eb93e98e031128fe8b899ef",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init-config",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/kafka-configmap",
                                        "name": "configmap"
                                    },
                                    {
                                        "mountPath": "/etc/kafka",
                                        "name": "config"
                                    },
                                    {
                                        "mountPath": "/var/lib/zookeeper",
                                        "name": "data"
                                    }
                                ]
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 10,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "zookeeper-config"
                                },
                                "name": "configmap"
                            },
                            {
                                "emptyDir": {},
                                "name": "config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate"
                },
                "volumeClaimTemplates": [
                    {
                        "metadata": {
                            "creationTimestamp": null,
                            "name": "data"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "1Gi"
                                }
                            },
                            "storageClassName": "kafka-zookeeper",
                            "volumeMode": "Filesystem"
                        },
                        "status": {
                            "phase": "Pending"
                        }
                    }
                ]
            },
            "status": {
                "collisionCount": 0,
                "currentReplicas": 2,
                "currentRevision": "pzoo-6dcdf6b87b",
                "observedGeneration": 1,
                "readyReplicas": 2,
                "replicas": 2,
                "updateRevision": "pzoo-6dcdf6b87b",
                "updatedReplicas": 2
            }
        }
    ],
    "kind": "List",
    "metadata": {
        "resourceVersion": "",
        "selfLink": ""
    }
}
